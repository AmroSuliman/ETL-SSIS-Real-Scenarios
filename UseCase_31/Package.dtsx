<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/18/2025 12:56:26 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMR"
  DTS:CreatorName="CONTACTGROUP\amr.soliman"
  DTS:DTSID="{2BCAE666-3715-464E-8419-BFEED77986D8}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="2"
  DTS:VersionGUID="{4234BE51-8640-4123-A13E-7D22DC6EC311}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{5F04DF1C-5467-479D-BE9A-4F54635F4750}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_249665ca2ba34ec0b1a5c72164d9b227"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_249665ca2ba34ec0b1a5c72164d9b227.Properties.Settings.get_Default():ST_249665ca2ba34ec0b1a5c72164d9b227.Properties.Sett" +
    "ings")]

namespace ST_249665ca2ba34ec0b1a5c72164d9b227.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_249665ca2ba34ec0b1a5c72164d9b227.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{383B3FAF-FAE9-4895-9766-577099EA71AA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_249665ca2ba34ec0b1a5c72164d9b227</RootNamespace>
    <AssemblyName>ST_249665ca2ba34ec0b1a5c72164d9b227</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Build.Conversion.v4.0" />
    <Reference Include="Microsoft.Build.Framework" />
    <Reference Include="Microsoft.Build.Utilities.v4.0" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c, processorArchitecture=MSIL">
      <HintPath>C:\Users\amr.soliman\AppData\Local\Temp\Vsta\SSIS_ST160\VstalabWvP_C_0iwIty__7mdopQ\packages\Microsoft.Office.Interop.Excel.15.0.4795.1001\lib\net20\Microsoft.Office.Interop.Excel.dll</HintPath>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Microsoft.Office.Interop.Excel;
using Microsoft.CSharp;
#endregion

namespace ST_249665ca2ba34ec0b1a5c72164d9b227
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            
            

            Microsoft.Office.Interop.Excel.Application excelApp = new Microsoft.Office.Interop.Excel.Application();
            Microsoft.Office.Interop.Excel.Workbook workBook = excelApp.Workbooks.Open(@"D:\01_Personal\01-SSIS\UseCase_31\Buyers.xlsx");
            foreach (Worksheet sheet in workBook.Worksheets)
            {
                sheet.Rows[2].Delete();
            }

            workBook.Save();
            workBook.Close(false);
            excelApp.Application.Quit();

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Microsoft.Office.Interop.Excel" version="15.0.4795.1001" targetFramework="net472" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_249665ca2ba34ec0b1a5c72164d9b227</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_249665ca2ba34ec0b1a5c72164d9b227</msb:DisplayName>
    <msb:ProjectId>{0F84F87C-C356-4865-A2EA-E9011FC52EF8}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_249665ca2ba34ec0b1a5c72164d9b227.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_249665ca2ba34ec0b1a5c72164d9b227")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_249665ca2ba34ec0b1a5c72164d9b227")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_249665ca2ba34ec0b1a5c72164d9b227.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_249665ca2ba34ec0b1a5c72164d9b227.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_249665ca2ba34ec0b1a5c72164d9b227.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_249665ca2ba34ec0b1a5c72164d9b227.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_249665ca2ba34ec0b1a5c72164d9b227.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_249665ca2ba34ec0b1a5c72164d9b227.dll">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
SQFgAU0AAQHoBFQAeQAeCVcAAQG/AVsAWQFdAmQAaQGABm4ADABdApcADADdCKMAFACFAa8AeQBf
CbcAgQBVAgYAcQBsCLsAmQEPCQEAcQAHBwYAmQAHBwYAAQGNCcEAwQAHB8cA4QAHBwYACAAUAOoA
CAAYAO8AKQB7AHMCLgALAEsCLgATAFQCLgAbAHMCLgAjAHwCLgArAKUCLgAzAKUCLgA7AKUCLgBD
AHwCLgBLAKsCLgBTAKUCLgBbAMICQwBjAO8ASQB7AHMCYQBrAO8AYwBzAO8AiQC7AAwDowBrAO8A
owCDAHgDowCLAH8DowCTAO8AqQC7ADADwwBrAO8AwwCbAKkDwwCjAAAEyQC7ADkD4wBrAO8A4wCL
AFkE4wCrAIME4wCTAO8A6QC7AAwDAwFrAO8AAwGDAHgDAwGLAOMEAwGTAO8ACQG7AGYDIwFrAO8A
IwGbAA0FIwGjAGQFKQG7AG8DQwFrAO8AQwGDAHgDQwGzAL0FQwGLAMsFQwGTAO8AYAG7AAwDYwFr
AO8AYwGzAL0FYwGLAPUFYwGTAO8AgAG7AAwDgwFrAO8AgwGLAB8GgwGrAIMEgwGTAO8AowFrAO8A
owGLAEkGowGDAHgDowGTAO8AwAG7ABUDwwFrAO8AwwGbAHMGwwGjANQG4wFrAO8A4wGLADIH4wGz
AL0F4wGTAO8AAAK7AB4DAALDACcDAwJrAO8AAwKrAIMEAwKLAFwHAwKTAO8AIAK7ADADIwJrAO8A
IwKzAL0FIwKLAFkEIwKTAO8AQwJrAO8AQwKLAB8GQwKTAO8AYAK7ADkDYwJrAO8AYwKLAFwHYwKT
AO8AoAK7AAwDowJrAO8A4AK7AEIDIAPDAEsDIAO7AFQDYAO7AF0DYAPDAAwDoAO7AGYD4AO7AG8D
BQD0AAcA9AAJAPQACwD0AA0A9AAPAPQAEQD2ABMAowEVAKUBFwD0ABkA9AAbAPQAHQD0AB8A9AAh
APQAIwD0ACUA9AAnAPQAKQD0ACsA9AAtAPQALwD0ADEA9AAzAKMBNQCjATcApQE5APQAOwD0AD0A
9AA/AKMBQQCjATcAAwABAAQAAwAKAAQAEQAFABIACAATAAkAAAC/Bh4CAAATAiMCAAAHCSgCAAAG
CS0CAAAIBjMCAABHCDgCAAAGCT0CAAB/CEECAAC/CEYCAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcA
AgALAAkAAQAMAAkAAgARAAsAAgATAA0AAgAVAA8AAgAdABEAAgAfABMAiwCnAASAAAABAAAAVCS7
cwAAAAAAAK0AAAAEAAAAAAAAAAAAAADPAAABAAAAABAAAAAAAAAAAAAAANgACAUAAAAABAAAAAAA
AAAAAAAAzwDfAQAAAAAEAAAAAAAAAAAAAADPAM0FAAAAAAQAAAAAAAAAAAAAAOEAbwYAAAAAAAAA
AAEAAAB3BwAAFAACABUAAgAAAAAAAF9WdGJsR2FwMV8xMABfVnRibEdhcDFfMjAAX1Z0YmxHYXAy
XzYwADw+b19fMAA8PnBfXzAASUVudW1lcmFibGVgMQBDYWxsU2l0ZWAxAF9WdGJsR2FwMV8xMgBJ
bnQzMgBBY3Rpb25gMgBfVnRibEdhcDFfNDQAX1Z0YmxHYXAyXzc0AF9WdGJsR2FwMV80NQBfVnRi
bEdhcDFfOTUAX1Z0YmxHYXAzXzExNgBTVF8yNDk2NjVjYTJiYTM0ZWMwYjFhNWM3MjE2NGQ5YjIy
NwBfVnRibEdhcDNfMjgAPE1vZHVsZT4AR2V0VHlwZUZyb21DTFNJRAB2YWx1ZV9fAG1zY29ybGli
AFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAENvcnJ1cHRMb2FkAElnbm9yZVJlYWRPbmx5UmVj
b21tZW5kZWQAR3VpZABXcml0ZVJlc1Bhc3N3b3JkAENyZWF0ZUluc3RhbmNlAGRlZmF1bHRJbnN0
YW5jZQBSYW5nZQBJbnZva2UASUVudW1lcmFibGUASURpc3Bvc2FibGUARWRpdGFibGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZW5hbWUAVHlwZQBTeXN0ZW0uQ29yZQBG
YWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3Jp
cHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARGlzcG9zZQBD
cmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ2FsbFNpdGUARGlzcElkQXR0cmlidXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAEd1aWRBdHRyaWJ1dGUAQ29tRXZlbnRJbnRlcmZhY2VBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEludGVyZmFjZVR5
cGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAExDSURDb252ZXJzaW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAERlZmF1bHRNZW1iZXJBdHRyaWJ1dGUA
VHlwZUlkZW50aWZpZXJBdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBD
b0NsYXNzQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAFNhdmUAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBNaXNzaW5nAF9Xb3JrYm9vawBSb3V0ZVdvcmtib29rAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNr
cy5TY3JpcHRUYXNrAExvY2FsAE1hcnNoYWwATWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2Vs
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8yNDk2NjVjYTJiYTM0
ZWMwYjFhNWM3MjE2NGQ5YjIyNy5kbGwAU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AQm9vbGVhbgBP
cGVuAFNjcmlwdE1haW4AT3JpZ2luAGdldF9BcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBDU2hh
cnBBcmd1bWVudEluZm8ATWljcm9zb2Z0LkNTaGFycABJbnZva2VNZW1iZXIATWljcm9zb2Z0LkNT
aGFycC5SdW50aW1lQmluZGVyAENhbGxTaXRlQmluZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIARGVs
aW1pdGVyAENvbnZlcnRlcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAEFjdGl2YXRvcgAuY3Rv
cgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNl
cwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMjQ5
NjY1Y2EyYmEzNGVjMGIxYTVjNzIxNjRkOWIyMjcuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3Vy
Y2VzAERlYnVnZ2luZ01vZGVzAFNhdmVDaGFuZ2VzAFNUXzI0OTY2NWNhMmJhMzRlYzBiMWE1Yzcy
MTY0ZDliMjI3LlByb3BlcnRpZXMAQ1NoYXJwQXJndW1lbnRJbmZvRmxhZ3MAQ1NoYXJwQmluZGVy
RmxhZ3MAU2V0dGluZ3MAVXBkYXRlTGlua3MAZ2V0X1dvcmtib29rcwBTeXN0ZW0uQ29sbGVjdGlv
bnMAU3VjY2VzcwBnZXRfRHRzAFNoZWV0cwBnZXRfV29ya3NoZWV0cwBTY3JpcHRSZXN1bHRzAERv
Y0V2ZW50cwBXb3JrYm9va0V2ZW50cwBBcHBFdmVudHMAZ2V0X1Jvd3MARm9ybWF0AE9iamVjdABf
V29ya3NoZWV0AFRhcmdldABRdWl0AGdldF9fRGVmYXVsdABzZXRfX0RlZmF1bHQAZ2V0X0RlZmF1
bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0N1cnJlbnQARG9jRXZlbnRzX0V2ZW50AFdvcmtib29rRXZl
bnRzX0V2ZW50AEFwcEV2ZW50c19FdmVudABNb3ZlTmV4dABBZGRUb01ydQBDb2x1bW5JbmRleABS
b3dJbmRleABOb3RpZnkAZ2V0X0Fzc2VtYmx5AFJlYWRPbmx5AAAASTAAMAAwADIANAA1ADAAMAAt
ADAAMAAwADAALQAwADAAMAAwAC0AQwAwADAAMAAtADAAMAAwADAAMAAwADAAMAAwADAANAA2AAFb
RAA6AFwAMAAxAF8AUABlAHIAcwBvAG4AYQBsAFwAMAAxAC0AUwBTAEkAUwBcAFUAcwBlAEMAYQBz
AGUAXwAzADEAXABCAHUAeQBlAHIAcwAuAHgAbABzAHgAAQ1EAGUAbABlAHQAZQAAcVMAVABfADIA
NAA5ADYANgA1AGMAYQAyAGIAYQAzADQAZQBjADAAYgAxAGEANQBjADcAMgAxADYANABkADkAYgAy
ADIANwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAKVF4ISvnfNN
lsXUakWE+YIABCABAQgDIAABBSABARERBCABAQ4FIAEBEWkEIAEBBgkgAgESgIESgIEFIAIBDg4G
IAEBEoCBDAcFEhwSMBI9EkASQQgAARKAgRGAnQYAARwSgIECBhwDIAAcCAABEoCBEYCpCQACEoCt
EYCxDhwABRKAuRGAvQ4VEoDBARKAgRKAgRUSgMEBEoCtCxUSUQEVElUCElkcCwABFRJRARMAEoC5
AwYTAAcVElUCElkcByACARMAEwEDIAACBSAAEoDNBSAAEoDRByACAQ4SgNEIt3pcVhk04IkIiYRd
zYCAzJEIsD9ffxHVCjoEAAAAAAQBAAAAARuAqywAAIClU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNl
cnZpY2VzLkN1c3RvbU1hcnNoYWxlcnMuRW51bWVyYXRvclRvRW51bVZhcmlhbnRNYXJzaGFsZXIs
IEN1c3RvbU1hcnNoYWxlcnMsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhAAEcARMDBhJhAwYSZQMGEhACBggDBhFQDAYVElEB
FRJVAhJZHAQAABJhBAAAEmUFAAEBEmUEAAASEAMAAAEFIAIcHBwGIAMBHBwcBCAAEj0TIA8SMA4c
HBwcHBwcHBwcHBwcHAQgABIcBCAAEjwDIAAOBCAAEiwEIAASKAQIABJhBAgAEmUECAASEAUIAhwc
HAQIABIcBAgAEjwDCAAOBAgAEiwECAASKAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfMjQ5NjY1Y2EyYmEzNGVjMGIxYTVjNzIxNjRkOWIyMjcA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcIAQAAAAAAAAAI
AQD8////AAAIAQCDBwAAAAAIAQAPAAAAAAAIAQCUAAAAAAAIAQA8AgAAAAAIAQAuAQAAAAAIAQAD
AAAAAAAIAQAVAQAAAAAIAQAbAQAAAAAIAQDuAQAAAAAIAQACAQAAAAAGAQACAAAAKQEAJDAwMDI0
NDEzLTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAVgEAKE1pY3Jvc29mdC5PZmZpY2UuSW50
ZXJvcC5FeGNlbC5BcHBFdmVudHMoTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkFwcEV2
ZW50cwAAWAEAJDAwMDIwODEzLTAwMDAtMDAwMC1jMDAwLTAwMDAwMDAwMDA0Ni5NaWNyb3NvZnQu
T2ZmaWNlLkludGVyb3AuRXhjZWwuQXBwRXZlbnRzX0V2ZW50AAApAQAkMDAwMjA4RDUtMDAwMC0w
MDAwLUMwMDAtMDAwMDAwMDAwMDQ2AABfAQBaU3lzdGVtLk9iamVjdCwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5AAApAQAkMDAwMjQ0MTEtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AABWAQAoTWljcm9z
b2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkRvY0V2ZW50cyhNaWNyb3NvZnQuT2ZmaWNlLkludGVy
b3AuRXhjZWwuRG9jRXZlbnRzAABYAQAkMDAwMjA4MTMtMDAwMC0wMDAwLWMwMDAtMDAwMDAwMDAw
MDQ2Lk1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5Eb2NFdmVudHNfRXZlbnQAAA0BAAhf
RGVmYXVsdAAAKQEAJDAwMDIwODQ2LTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAKQEAJDAw
MDIwOEQ3LTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAKQEAJDAwMDIwOERBLTAwMDAtMDAw
MC1DMDAwLTAwMDAwMDAwMDA0NgAAKQEAJDAwMDI0NDEyLTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAw
MDA0NgAAYAEALU1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5Xb3JrYm9va0V2ZW50cy1N
aWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuV29ya2Jvb2tFdmVudHMAAF0BACQwMDAyMDgx
My0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwNDYzTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4
Y2VsLldvcmtib29rRXZlbnRzX0V2ZW50AAApAQAkMDAwMjA4REItMDAwMC0wMDAwLUMwMDAtMDAw
MDAwMDAwMDQ2AAApAQAkMDAwMjA4RDgtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAABEQAAAAAAAAAAAAABeQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUEAAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQC7c1QkAAABALtzVCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADIANAA5ADYANgA1AGMAYQAyAGIAYQAzADQAZQBjADAAYgAxAGEANQBjADcAMgAxADYANABkADkA
YgAyADIANwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5ADMAMAAw
AC4AMgA5ADYAMgA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADIA
NAA5ADYANgA1AGMAYQAyAGIAYQAzADQAZQBjADAAYgAxAGEANQBjADcAMgAxADYANABkADkAYgAy
ADIANwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8AMgA0ADkANgA2ADUAYwBhADIAYgBhADMANABlAGMAMABiADEAYQA1AGMANwAyADEANgA0
AGQAOQBiADIAMgA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfADIANAA5ADYANgA1AGMAYQAyAGIAYQAzADQAZQBjADAAYgAxAGEANQBjADcAMgAxADYANABk
ADkAYgAyADIANwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
OQAzADAAMAAuADIAOQA2ADIANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AOQAzADAAMAAuADIAOQA2ADIANwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABwMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task"
          TopLeft="409.999977598589,69.333332851198" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>